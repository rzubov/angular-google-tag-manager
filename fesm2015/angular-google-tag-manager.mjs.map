{"version":3,"file":"angular-google-tag-manager.mjs","sources":["../../../projects/angular-google-tag-manager/src/lib/angular-google-tag-manager-config.service.ts","../../../projects/angular-google-tag-manager/src/lib/angular-google-tag-manager.service.ts","../../../projects/angular-google-tag-manager/src/lib/angular-google-tag-manager.module.ts","../../../projects/angular-google-tag-manager/src/public-api.ts","../../../projects/angular-google-tag-manager/src/angular-google-tag-manager.ts"],"sourcesContent":["import { Inject, Injectable, InjectionToken, Optional } from '@angular/core';\nimport { GoogleTagManagerConfig } from './google-tag-manager-config';\n\nexport const GoogleTagManagerConfigService =\n  new InjectionToken<GoogleTagManagerConfig>('google-tag-manager-config');\n\n// adapted from https://github.com/auth0/auth0-angular#dynamic-configuration\n@Injectable({ providedIn: 'root' })\nexport class GoogleTagManagerConfiguration {\n  private _googleTagManagerConfig: GoogleTagManagerConfig = {\n    id: null,\n    gtm_auth: '',\n    gtm_preview: '',\n  };\n\n  constructor(\n    @Optional()\n    @Inject(GoogleTagManagerConfigService)\n      googleTagManagerConfig?: GoogleTagManagerConfig\n  ) {\n    if (googleTagManagerConfig) {\n      this.set(googleTagManagerConfig);\n    }\n  }\n\n  public set(googleTagManagerConfig: GoogleTagManagerConfig): void {\n    this._googleTagManagerConfig = googleTagManagerConfig;\n  }\n\n  public get(): GoogleTagManagerConfig {\n    return this._googleTagManagerConfig;\n  }\n}\n","import { Inject, Injectable, Optional } from '@angular/core';\nimport { GoogleTagManagerConfiguration } from './angular-google-tag-manager-config.service';\nimport { GoogleTagManagerConfig } from './google-tag-manager-config';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class GoogleTagManagerService {\n  private isLoaded = false;\n  private config: GoogleTagManagerConfig | null;\n\n  private browserGlobals = {\n    windowRef(): any {\n      return window;\n    },\n    documentRef(): any {\n      return document;\n    },\n  };\n\n  constructor(\n    @Optional()\n    @Inject(GoogleTagManagerConfiguration)\n    public googleTagManagerConfiguration: GoogleTagManagerConfiguration,\n    @Optional() @Inject('googleTagManagerId') public googleTagManagerId: string,\n    @Optional()\n    @Inject('googleTagManagerAuth')\n    public googleTagManagerAuth: string,\n    @Optional()\n    @Inject('googleTagManagerPreview')\n    public googleTagManagerPreview: string,\n    @Optional()\n    @Inject('googleTagManagerResourcePath')\n    public googleTagManagerResourcePath: string,\n    @Optional()\n    @Inject('googleTagManagerCSPNonce')\n    public googleTagManagerCSPNonce: string\n  ) {\n    this.config = this.googleTagManagerConfiguration?.get();\n    if (this.config == null) {\n      this.config = { id: null };\n    }\n\n    this.config = {\n      ...this.config,\n      id: googleTagManagerId || this.config.id,\n      gtm_auth: googleTagManagerAuth || this.config.gtm_auth,\n      gtm_preview: googleTagManagerPreview || this.config.gtm_preview,\n      gtm_resource_path:\n        googleTagManagerResourcePath || this.config.gtm_resource_path,\n    };\n    if (this.config.id == null) {\n      throw new Error('Google tag manager ID not provided.');\n    }\n  }\n\n  public getDataLayer(): any[] {\n    const window = this.browserGlobals.windowRef();\n    window.dataLayer = window.dataLayer || [];\n    return window.dataLayer;\n  }\n\n  private pushOnDataLayer(obj: object): void {\n    const dataLayer = this.getDataLayer();\n    dataLayer.push(obj);\n  }\n\n  public addGtmToDom(): Promise<boolean> {\n    return new Promise((resolve, reject) => {\n      if (this.isLoaded) {\n        return resolve(this.isLoaded);\n      }\n      const doc = this.browserGlobals.documentRef();\n      this.pushOnDataLayer({\n        'gtm.start': new Date().getTime(),\n        event: 'gtm.js',\n      });\n\n      const gtmScript = doc.createElement('script');\n      gtmScript.id = 'GTMscript';\n      gtmScript.async = true;\n      gtmScript.src = this.applyGtmQueryParams(\n        this.config.gtm_resource_path\n          ? this.config.gtm_resource_path\n          : 'https://www.googletagmanager.com/gtm.js'\n      );\n      gtmScript.addEventListener('load', () => {\n        return resolve((this.isLoaded = true));\n      });\n      gtmScript.addEventListener('error', () => {\n        return reject(false);\n      });\n      if (this.googleTagManagerCSPNonce) {\n        gtmScript.setAttribute('nonce', this.googleTagManagerCSPNonce);\n      }\n      doc.head.insertBefore(gtmScript, doc.head.firstChild);\n    });\n  }\n\n  public pushTag(item: object): Promise<void> {\n    return new Promise<void>((resolve, reject) => {\n      if (!this.isLoaded) {\n        this.addGtmToDom()\n          .then(() => {\n            this.pushOnDataLayer(item);\n            return resolve();\n          })\n          .catch(() => reject());\n      } else {\n        this.pushOnDataLayer(item);\n        return resolve();\n      }\n    });\n  }\n\n  private applyGtmQueryParams(url: string): string {\n    if (url.indexOf('?') === -1) {\n      url += '?';\n    }\n\n    return (\n      url +\n      Object.keys(this.config)\n        .filter((k) => this.config[k])\n        .map((k) => `${k}=${this.config[k]}`)\n        .join('&')\n    );\n  }\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { GoogleTagManagerConfigService } from './angular-google-tag-manager-config.service';\nimport { GoogleTagManagerConfig } from './google-tag-manager-config';\n\n@NgModule()\nexport class GoogleTagManagerModule {\n  public static forRoot(\n    config?: GoogleTagManagerConfig\n  ): ModuleWithProviders<GoogleTagManagerModule> {\n    return {\n      ngModule: GoogleTagManagerModule,\n      providers: [{ provide: GoogleTagManagerConfigService, useValue: config }],\n    };\n  }\n}\n","/*\n * Public API Surface of angular-google-tag-manager\n */\n\nexport * from './lib/angular-google-tag-manager.service';\nexport * from './lib/angular-google-tag-manager-config.service';\nexport * from './lib/angular-google-tag-manager.module';\nexport * from './lib/google-tag-manager-config';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}